apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: pan-ngfw-ds
  namespace: kube-system
  labels:
      app: pan-ngfw
spec:
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app: pan-ngfw
  template:
    metadata:
      labels:
        app: pan-ngfw
      annotations:
          # Application Pods and Namespaces with annotation
          #     paloaltonetworks.com/firewall: pan-fw*
          # will be secured when this daemonset is running with exact same
          # annotation on the node. The value must start with "pan-fw" as prefix
          # This needs to be in the list of "firewall" in pan-cni-configmap.yaml
          paloaltonetworks.com/firewall: pan-fw
          
          # Below annotation is always fixed and is used to detect this Daemonset.
          #     paloaltonetworks.com/app: pan-fw
          # After k8s plugin change, change this to following to avoid confusion:
          #     paloaltonetworks.com/app: pan-ngfw-app
          paloaltonetworks.com/app: pan-fw
         
          {{- if or (eq .Values.cluster.deployTo "openshift") (eq .Values.cluster.multus "enable")  }}
          
          # This annotation enables pan-cni CNI plugin for this pod
          # This needs to be done after NetworkAttachmentDefinition pan-cni
          # (pan-cni-net-attach-def.yaml) has been deployed in the same
          # namespace as this pod.
          # These 2 steps are needed for app pod and their namespace as well.
          k8s.v1.cni.cncf.io/networks: pan-cni
          {{- end }}
    spec:
    {{- if .Values.nodeSelector }}
    nodeSelector: {{ toYaml .Values.nodeSelector | nindent 8 }}
    {{- end }}
      priorityClassName: system-cluster-critical
      # Minimize downtime during a rolling upgrade or deletion; Can tell Kubernetes
      # to do a "force deletion": 
      # https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
      # but for now allowing 10 seconds to do graceful removal of the slots by 
      # sending dereg to PAN-MGMT
      terminationGracePeriodSeconds: 10
      hostAliases:
      # Internal IP address of ipsec0 interface on MGMT pod
      - ip: "169.254.202.1"
        hostnames:
          - mgmt
      #nodeSelector:  
      #  firewall: pan-ngfw-ds
      containers:
        - name: pan-ngfw-container
          image: "{{ .Values.dp.image }}:{{ .Values.dp.version }}"
          command: ["/sbin/pan_pause"]
          lifecycle:
            preStop:
              exec:
                command: ["/bin/bash","-c","/sbin/pan_command pan_shutdown"]
          readinessProbe:
            exec:
              command: ["/sbin/pan_ready_check"]
            initialDelaySeconds: 15
            periodSeconds: 2
            failureThreshold: 1
            successThreshold: 2
          livenessProbe:
            exec:
              command: ["/sbin/pan_alive_check"]
            initialDelaySeconds: 600 #covers image download and panos start
            periodSeconds: 5
            # liveness is still the indicator of the container's health.
            failureThreshold: 2
          imagePullPolicy: Always
          securityContext:
            capabilities:
            {{- if eq .Values.cluster.deployTo "openshift" }}	
              add: ["ALL"] 
            privileged: true	
            runAsNonRoot: false	
            {{- else }}	
              add: ["NET_ADMIN","NET_RAW","NET_BROADCAST","NET_BIND_SERVICE"]
            {{- end }}
          resources:
            requests:
              # configurable based on desired throughput, number of running pods
              cpu: "{{ .Values.dp.cpuLimit }}"
              memory: "{{ .Values.dp.memoryLimit }}"
            limits:
              cpu: "{{ .Values.dp.cpuLimit }}"
              memory: "{{ .Values.dp.memoryLimit }}"
          volumeMounts:
          - mountPath: /opt/appinfo
            name: appinfo
          {{- if ne .Values.cluster.deployTo "openshift" }}	
          - mountPath: /opt/pan-cni-ready	
            name: pan-cni-ready	
          {{- end }}
          - mountPath: /dev/net/tun
            name: devnettun
            readOnly: false
          - mountPath: /dev/shm
            name: dshm
          - mountPath: /etc/pan-fw-sw
            name: sw-secret
          # Optional for custom cert
          - name: pancustomca
            mountPath: /etc/custom-ca
          envFrom:
          - configMapRef:
              name: pan-ngfw-config
          env:
            - name: CPU_REQUEST
              valueFrom:
                resourceFieldRef:
                  containerName: pan-ngfw-container
                  resource: requests.cpu
            - name: CPU_LIMIT
              valueFrom:
                resourceFieldRef:
                  containerName: pan-ngfw-container
                  resource: limits.cpu
            - name: MEMORY_REQUEST
              valueFrom:
                resourceFieldRef:
                  containerName: pan-ngfw-container
                  resource: requests.memory
            - name: MEMORY_LIMIT
              valueFrom:
                resourceFieldRef:
                  containerName: pan-ngfw-container
                  resource: limits.memory
            - name: MY_POD_UUID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.uid
            - name: MY_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: MY_POD_SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      - name: "{{ .Values.imagePullSecrets }}"
      {{- end }}
      volumes:
      - name: devnettun
        hostPath:
          path: /dev/net/tun
      - name: dshm
        emptyDir:
          medium: Memory
      - name: appinfo
        hostPath:
          # app pod info's directory location on host
          # below path should match pan-cni's "appinfo" volume and 
          # "appinfo_dir" configmap and pan-ngfw-ds's part of "pan-cni-ready" volume
          path: /var/log/pan-appinfo
          type: Directory
      {{- if ne .Values.cluster.deployTo "openshift" }}	
      - name: pan-cni-ready
        hostPath:
          # block pan-ngfw-ds scheduling till PAN CNI plugin insertion on the node
          path: /var/log/pan-appinfo/pan-cni-ready
          type: Directory
      {{- end }}
      - name: sw-secret
        secret:
          # Don't change this. Needs to match PAN_DP_NAME in pan-cn-mgmt.yaml
          # followed by suffix "-sw". Also hard-coded in ipsec.conf
          secretName: pan-fw-sw
       # Optional for custom cert - Pass custom CA cert as a secret with file name ca.crt
      - name: pancustomca
        secret:
          secretName: custom-ca-secret
          optional: true
